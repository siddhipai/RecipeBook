{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/TagsInput/TagsInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TagsInput() {\n  _s();\n\n  const [tags, setTags] = useState([]);\n\n  function handleKeyDown(e) {\n    if (e.key !== 'Enter') return;\n    const value = e.target.value;\n    if (!value.trim()) return;\n    setTags([...tags, value]);\n    e.target.value = '';\n  }\n\n  function removeTag(index) {\n    setTags(tags.filter((el, i) => i !== index));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tags-input-container\",\n    children: [tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => removeTag(index),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      onKeyDown: handleKeyDown,\n      type: \"text\",\n      className: \"tags-input\",\n      placeholder: \"Type somthing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TagsInput, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n\n_c = TagsInput;\nexport default TagsInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsInput\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/TagsInput/TagsInput.js"],"names":["useState","TagsInput","tags","setTags","handleKeyDown","e","key","value","target","trim","removeTag","index","filter","el","i","map","tag"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASI,aAAT,CAAuBC,CAAvB,EAAyB;AACrB,QAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAsB;AACtB,UAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACA,QAAG,CAACA,KAAK,CAACE,IAAN,EAAJ,EAAkB;AAClBN,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUK,KAAV,CAAD,CAAP;AACAF,IAAAA,CAAC,CAACG,MAAF,CAASD,KAAT,GAAiB,EAAjB;AACH;;AAED,WAASG,SAAT,CAAmBC,KAAnB,EAAyB;AACrBR,IAAAA,OAAO,CAACD,IAAI,CAACU,MAAL,CAAY,CAACC,EAAD,EAAKC,CAAL,KAAWA,CAAC,KAAKH,KAA7B,CAAD,CAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,eACMT,IAAI,CAACa,GAAL,CAAS,CAACC,GAAD,EAAML,KAAN,kBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBK;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAE,MAAMN,SAAS,CAACC,KAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAA+BA,KAA/B;AAAA;AAAA;AAAA;AAAA,YADF,CADN,eAOI;AAAO,MAAA,SAAS,EAAEP,aAAlB;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAA6C,MAAA,SAAS,EAAC,YAAvD;AAAoE,MAAA,WAAW,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA1BQH,S;;KAAAA,S;AA4BT,eAAeA,SAAf","sourcesContent":["import { useState } from 'react'\n\nfunction TagsInput(){\n    const [tags, setTags] = useState([])\n\n    function handleKeyDown(e){\n        if(e.key !== 'Enter') return\n        const value = e.target.value\n        if(!value.trim()) return\n        setTags([...tags, value])\n        e.target.value = ''\n    }\n\n    function removeTag(index){\n        setTags(tags.filter((el, i) => i !== index))\n    }\n\n    return (\n        <div className=\"tags-input-container\">\n            { tags.map((tag, index) => (\n                <div className=\"tag-item\" key={index}>\n                    <span className=\"text\">{tag}</span>\n                    <span className=\"close\" onClick={() => removeTag(index)}>&times;</span>\n                </div>\n            )) }\n            <input onKeyDown={handleKeyDown} type=\"text\" className=\"tags-input\" placeholder=\"Type somthing\" />\n        </div>\n    )\n}\n\nexport default TagsInput"]},"metadata":{},"sourceType":"module"}