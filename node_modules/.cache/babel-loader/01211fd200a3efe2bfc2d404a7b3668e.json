{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/Card/Card.js\",\n    _s = $RefreshSig$();\n\nimport './card.scss';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { useRef, useState } from 'react';\nimport AddRecipeModal from '../AddRecipeModal/AddRecipeModal';\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const {\n    data,\n    editRecipe\n  } = props;\n  const recipeRef = useRef(null);\n  const confirmationRef = useRef(null);\n\n  const removeRecipe = name => {\n    // e.preventDefault();\n    console.log(name, 'nammeeee^^^^');\n    confirmationRef.current.style.display = \"block\";\n  }; // const editRecipe = (e, name) => {\n  //   e.preventDefault();\n  //   setIsEdit(true)\n  //   for(let data of initialData) {\n  //     if(data.name === name) {\n  //       setDataToUpdate(data)\n  //       // break\n  //     }\n  //   }\n  //   recipeRef.current.style.display = \"block\";\n  // };\n\n\n  return data.map((entry, ind) => {\n    const ingredients = entry.ingredients.split(',');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardIcons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: entry.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this), ingredients.map(ing => /*#__PURE__*/_jsxDEV(\"h4\", {\n            onClick: () => {},\n            children: ing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 31\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this)\n      }, data.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n          onClick: () => removeRecipe(entry.name),\n          className: \"delete-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        data: entry,\n        ref: confirmationRef\n      }, entry.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  });\n}\n\n_s(Card, \"5Eq7HDZkg4LTQMoaRsZIPHKhKRY=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/Card/Card.js"],"names":["RiCloseCircleLine","TiEdit","useRef","useState","AddRecipeModal","ConfirmationModal","Card","props","data","editRecipe","recipeRef","confirmationRef","removeRecipe","name","console","log","current","style","display","map","entry","ind","ingredients","split","title","ing"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAqBF,KAA3B;AAEA,QAAMG,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMS,eAAe,GAAGT,MAAM,CAAC,IAAD,CAA9B;;AAEA,QAAMU,YAAY,GAAIC,IAAD,IAAU;AAC7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,cAAlB;AACAF,IAAAA,eAAe,CAACK,OAAhB,CAAwBC,KAAxB,CAA8BC,OAA9B,GAAwC,OAAxC;AACD,GAJD,CANmB,CAYnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAOV,IAAI,CAACW,GAAL,CAAS,CAACC,KAAD,EAAQC,GAAR,KAAe;AAC7B,UAAMC,WAAW,GAAGF,KAAK,CAACE,WAAN,CAAkBC,KAAlB,CAAwB,GAAxB,CAApB;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAA2B;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BAClC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKJ,KAAK,CAACP;AAAX;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGS,WAAW,CAACH,GAAZ,CAAgBM,GAAG,iBAAI;AAAI,YAAA,OAAO,EAAE,MAAK,CAAE,CAApB;AAAA,sBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAAvB,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADkC,SAA2BjB,IAAI,CAACK,IAAhC;AAAA;AAAA;AAAA;AAAA,cAA3B,eAWP;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI,QAAC,iBAAD;AACE,UAAA,OAAO,EAAE,MAAMD,YAAY,CAACQ,KAAK,CAACP,IAAP,CAD7B;AAEE,UAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXO,eAqBH,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEO,KAAzB;AAAgC,QAAA,GAAG,EAAET;AAArC,SAA2DS,KAAK,CAACP,IAAjE;AAAA;AAAA;AAAA;AAAA,cArBG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAwBH,GA1BQ,CAAP;AA0BC;;GAlDMP,I;;KAAAA,I;AAoDT,eAAeA,IAAf","sourcesContent":["import './card.scss'\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { useRef, useState } from 'react';\nimport AddRecipeModal from '../AddRecipeModal/AddRecipeModal';\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\n\nfunction Card(props) {\n  const {data, editRecipe} = props\n\n  const recipeRef = useRef(null);\n  const confirmationRef = useRef(null);\n\n  const removeRecipe = (name) => {\n    // e.preventDefault();\n    console.log(name, 'nammeeee^^^^')\n    confirmationRef.current.style.display = \"block\";\n  };\n\n  // const editRecipe = (e, name) => {\n  //   e.preventDefault();\n  //   setIsEdit(true)\n  //   for(let data of initialData) {\n  //     if(data.name === name) {\n  //       setDataToUpdate(data)\n  //       // break\n  //     }\n  //   }\n  //   recipeRef.current.style.display = \"block\";\n  // };\n\n  return data.map((entry, ind)=> {\n    const ingredients = entry.ingredients.split(',')\n    return <div className='cardIcons'><div className='card' key={data.name}>\n    <div className=\"container\">\n      <h2><b>Title:</b></h2> \n      <h4>{entry.title}</h4> \n      <h2><b>Name:</b></h2> \n      <h4>{entry.name}</h4> \n      <h2><b>Ingredients:</b></h2> \n      {ingredients.map(ing => <h4 onClick={()=> {}}>{ing}</h4> \n      )}\n    </div>\n    </div>\n    <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeRecipe(entry.name)}\n          className='delete-icon'\n        />\n        {/* <TiEdit\n          onClick={e => editRecipe(e, entry.name)}\n          className='edit-icon'\n        /> */}\n    </div>\n        <ConfirmationModal data={entry} ref={confirmationRef} key={entry.name} />\n        {/* <AddRecipeModal ref={recipeRef}/> */}\n  </div>\n})}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}