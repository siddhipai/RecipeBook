{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css'; // import Recipe from './client/components/Recipe/Recipe';\n\nimport Home from './client/components/Home/Home';\nimport './client/components/style.scss';\nimport { useEffect, useState } from 'react';\nimport Banner from './client/components/Banner/Banner';\nimport { Route, Routes, useLocation, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './client/components/Login/Login';\nimport history from './client/history';\nimport PRoutes from './client/PRoutes';\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const session = window.localStorage.getItem('session');\n  const loggedIn = session && session.token ? true : false;\n  const [user, setUser] = useState({\n    loggedIn\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user.loggedIn) {\n      navigate('/home');\n    } else {\n      window.localStorage.removeItem('session');\n    }\n\n    const session = window.localStorage.getItem('session');\n    const sessionId = session && session.token;\n    fetch('/sessions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        uuid: sessionId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.status == 200) {\n        setUser({\n          loggedIn: true\n        });\n      } else {\n        setUser({\n          loggedIn: false\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(PRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 40\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"oMSyT908yYgHD18QJRyXsEOdH5E=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/App.js"],"names":["logo","Home","useEffect","useState","Banner","Route","Routes","useLocation","Navigate","useNavigate","Login","history","PRoutes","createContext","UserContext","App","session","window","localStorage","getItem","loggedIn","token","user","setUser","navigate","location","removeItem","sessionId","fetch","method","headers","body","JSON","stringify","uuid","then","response","json","data","status"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n// import Recipe from './client/components/Recipe/Recipe';\nimport Home from './client/components/Home/Home';\nimport './client/components/style.scss';\nimport { useEffect, useState } from 'react';\nimport Banner from './client/components/Banner/Banner';\nimport { Route, Routes, useLocation, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './client/components/Login/Login';\nimport history from './client/history';\nimport PRoutes from './client/PRoutes';\nimport { createContext } from \"react\";\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const session = window.localStorage.getItem('session')\n  const loggedIn = session && session.token ? true : false\n  const [user, setUser] = useState({ loggedIn });\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  useEffect(() => {\n    if(user.loggedIn) {\n      navigate('/home');\n    } else {\n      window.localStorage.removeItem('session')\n    }\n    const session = window.localStorage.getItem('session')\n    const sessionId = session && session.token\n    \n    fetch('/sessions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({uuid: sessionId})\n    }).then(response => response.json())\n      .then(data => {\n        if(data.status == 200) {\n          setUser({loggedIn: true})\n        } else {\n          setUser({loggedIn: false})\n        }\n      });\n  }, [])\n\n  return <UserContext.Provider value={{ user, setUser }}>\n      <Banner />\n      <Routes>\n        {/* {isLoggedIn && <Navigate to={{ pathname: '/'}} />} */}\n        <Route path=\"/\" element={<Login />}/>\n        <Route element={<PRoutes />}>\n          <Route path=\"/home\" element={<Home />} exact/>\n        </Route>\n      </Routes>\n    </UserContext.Provider>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}