{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/AddRecipeModal/AddRecipeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './AddRecipeModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipeModal = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function AddRecipeModal(props, recipeRef) {\n  _s();\n\n  const {\n    data,\n    open,\n    dataToUpdate,\n    isEdit,\n    setIsEdit\n  } = props; // const [name, setIngrName] = useState('')\n\n  const [recName, setRecName] = useState(''); // const [unit, setUnit] = useState('')\n\n  const [ingredients, setIngredients] = useState('');\n  useEffect(() => {\n    if (isEdit) {\n      setRecName(dataToUpdate.name);\n      setIngredients(dataToUpdate.ingredients);\n    }\n  }, [isEdit, dataToUpdate]);\n\n  const onModalCancel = e => {\n    recipeRef.current.style.display = 'none';\n    setRecName('');\n    setIngredients('');\n  };\n\n  const handleChangeName = e => {\n    const targetVal = e.target.value; // const ingArr = targetVal.split(',')\n    // setIngrName(e.target.value)\n\n    setIngredients(targetVal);\n  };\n\n  const handleChange = e => {\n    setRecName(e.target.value);\n  }; // const handleNewIngredient = (e) => {\n  //     e.preventDefault();\n  //     setAmount();\n  //     setIngrName('');\n  //     const newIngredient =\n  //         {'amount' : amount,\n  //          'ingredient': ingrName\n  //         };\n  //     setIngredients([...ingredients, newIngredient])\n  //     setIngrName('')\n  //     setAmount('')\n  // };\n\n\n  const addIngredientsToStore = async () => {\n    console.log(isEdit, 'lsjkfhkjfdf');\n\n    if (isEdit) {\n      console.log('here2', recName, ingredients);\n      fetch('/updateRecipe', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: recName,\n          ingredients: ingredients,\n          userid: 1\n        })\n      }).then(res => res.json()).then(res => console.log(res)); //   console.log(response, 'responseresponse')\n      // setIngrName('')\n      // setRecName('')\n      // setIsEdit(false)\n    } else {\n      console.log('here3');\n      fetch('/saverecipes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: recName,\n          ingredients: ingredients,\n          userid: 1\n        })\n      }).then(res => res.json()).then(res => console.log(res)); //   console.log(response, 'responseresponse')\n      // setIngrName('')\n      // setRecName('')\n    }\n  }; // const  showIngredients = ()=>{\n  //     return ingredients.map(ingredient =>{\n  //         return(\n  //             <p >{ingredient.amount} {ingredient.ingredient}</p> \n  //         )\n  //     })\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newRecipe\",\n    ref: recipeRef,\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onModalCancel,\n        className: \"close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"ingredient-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChangeTitle,\n              type: \"text\",\n              step: \"any\",\n              value: recTitle,\n              required: true,\n              placeholder: \"Enter title of recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"text\",\n              step: \"any\",\n              value: recName,\n              required: true,\n              placeholder: \"Enter name of recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingredient\",\n              children: \"Ingredient:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"4\",\n              cols: \"50\",\n              onChange: handleChangeName,\n              type: \"text\",\n              value: ingredients,\n              required: true,\n              placeholder: \"Enter ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addIngredientsToStore,\n            className: \"save-button\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}, \"A6nA1dwcnPOR8+S35KAFqKUYuZU=\")), \"A6nA1dwcnPOR8+S35KAFqKUYuZU=\");\n\n_c2 = AddRecipeModal;\nexport default AddRecipeModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddRecipeModal$React.forwardRef\");\n$RefreshReg$(_c2, \"AddRecipeModal\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/AddRecipeModal/AddRecipeModal.js"],"names":["React","useEffect","useState","AddRecipeModal","forwardRef","props","recipeRef","data","open","dataToUpdate","isEdit","setIsEdit","recName","setRecName","ingredients","setIngredients","name","onModalCancel","e","current","style","display","handleChangeName","targetVal","target","value","handleChange","addIngredientsToStore","console","log","fetch","method","headers","body","JSON","stringify","userid","then","res","json","handleChangeTitle","recTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AddRecipeModal.scss'\n\nconst AddRecipeModal = React.forwardRef(function AddRecipeModal(props, recipeRef) {\n    const {data, open, dataToUpdate, isEdit, setIsEdit} = props\n    // const [name, setIngrName] = useState('')\n    const [recName, setRecName] = useState('')\n    // const [unit, setUnit] = useState('')\n    const [ingredients, setIngredients] = useState('')\n\n    useEffect(() => {\n        if(isEdit) {\n            setRecName(dataToUpdate.name)\n            setIngredients(dataToUpdate.ingredients)\n        }\n    }, [isEdit, dataToUpdate])\n\n    const onModalCancel = e => {\n        recipeRef.current.style.display = 'none';\n        setRecName('')\n        setIngredients('')\n    }\n    const handleChangeName = e => {\n        const targetVal = e.target.value\n        // const ingArr = targetVal.split(',')\n        // setIngrName(e.target.value)\n        setIngredients(targetVal)\n    }\n\n    const handleChange = e => {\n        setRecName(e.target.value)\n    }\n\n    // const handleNewIngredient = (e) => {\n    //     e.preventDefault();\n    //     setAmount();\n    //     setIngrName('');\n    //     const newIngredient =\n    //         {'amount' : amount,\n    //          'ingredient': ingrName\n    //         };\n    //     setIngredients([...ingredients, newIngredient])\n    //     setIngrName('')\n    //     setAmount('')\n    // };\n\n    const addIngredientsToStore = async () => {\n        console.log(isEdit, 'lsjkfhkjfdf')\n        if(isEdit) {\n            console.log('here2', recName, ingredients)\n            fetch('/updateRecipe', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({name: recName, ingredients: ingredients, userid: 1})\n                }).then(res => res.json())\n                .then(res => console.log(res));\n            //   console.log(response, 'responseresponse')\n            // setIngrName('')\n            // setRecName('')\n            // setIsEdit(false)\n        } else {\n            console.log('here3')\n            fetch('/saverecipes', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({name: recName, ingredients: ingredients, userid: 1})\n                }).then(res => res.json())\n                .then(res => console.log(res));\n            //   console.log(response, 'responseresponse')\n            // setIngrName('')\n            // setRecName('')\n        }\n    }\n\n    // const  showIngredients = ()=>{\n    //     return ingredients.map(ingredient =>{\n    //         return(\n    //             <p >{ingredient.amount} {ingredient.ingredient}</p> \n    //         )\n    //     })\n    // };\n    return (\n        <div id='newRecipe' ref={recipeRef} className='modal'>\n            <div className='modal-content'>\n            <span onClick={onModalCancel} className='close'>&times;</span>\n            <form id='ingredient-form' >\n                <div className='formContainer'>\n                    <div className='content'>\n                        <label htmlFor='name'>Name:</label>\n                        <input onChange={handleChangeTitle} type='text' step='any' value={recTitle} required placeholder='Enter title of recipe'/>\n                    </div>\n                    <div className='content'>\n                        <label htmlFor='name'>Name:</label>\n                        <input onChange={handleChange} type='text' step='any' value={recName} required placeholder='Enter name of recipe'/>\n                    </div>\n                    <div className='content'>\n                        <label htmlFor='ingredient'>Ingredient:</label>\n                        <textarea rows=\"4\" cols=\"50\" onChange={handleChangeName} type='text' value={ingredients} required placeholder='Enter ingredients'/>\n                    </div>\n                    <button onClick={addIngredientsToStore} className='save-button'>\n                Add\n            </button>\n                </div>\n                {/* {showIngredients()} */}\n            </form>\n            </div>\n        </div>\n    )\n});\n\nexport default AddRecipeModal;"]},"metadata":{},"sourceType":"module"}