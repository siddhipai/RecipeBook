{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/components/RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddRecipe from './AddRecipe';\nimport Recipe from './Recipe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  console.log('hetererterte');\n\n  const addRecipe = recipe => {\n    if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n      return;\n    }\n\n    const newRecipes = [recipe, ...recipes];\n    setRecipes(newRecipes);\n    console.log(...recipes);\n  };\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => item.id === recipeId ? newValue : item));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n    setRecipes(removedArr);\n  };\n\n  const completeRecipe = id => {\n    let updatedRecipes = recipes.map(recipe => {\n      if (recipe.id === id) {\n        recipe.isComplete = !recipe.isComplete;\n      }\n\n      return recipe;\n    });\n    setRecipes(updatedRecipes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AddRecipe, {\n      onSubmit: addRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(RecipeList, \"O/YakigGclqCJkazvNfZLBlWnuY=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/components/RecipeList.js"],"names":["React","useState","AddRecipe","Recipe","RecipeList","recipes","setRecipes","console","log","addRecipe","recipe","text","test","newRecipes","updateRecipe","recipeId","newValue","prev","map","item","id","removeRecipe","removedArr","filter","completeRecipe","updatedRecipes","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAMC,SAAS,GAAGC,MAAM,IAAI;AAC1B,QAAI,CAACA,MAAM,CAACC,IAAR,IAAgB,QAAQC,IAAR,CAAaF,MAAM,CAACC,IAApB,CAApB,EAA+C;AAC7C;AACD;;AAED,UAAME,UAAU,GAAG,CAACH,MAAD,EAAS,GAAGL,OAAZ,CAAnB;AAEAC,IAAAA,UAAU,CAACO,UAAD,CAAV;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGH,OAAf;AACD,GATD;;AAWA,QAAMS,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3C,QAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDL,IAAAA,UAAU,CAACW,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,QAAZ,GAAuBC,QAAvB,GAAkCG,IAApD,CAAT,CAAV;AACD,GAND;;AAQA,QAAME,YAAY,GAAGD,EAAE,IAAI;AACzB,UAAME,UAAU,GAAG,CAAC,GAAGjB,OAAJ,EAAakB,MAAb,CAAoBb,MAAM,IAAIA,MAAM,CAACU,EAAP,KAAcA,EAA5C,CAAnB;AAEAd,IAAAA,UAAU,CAACgB,UAAD,CAAV;AACD,GAJD;;AAMA,QAAME,cAAc,GAAGJ,EAAE,IAAI;AAC3B,QAAIK,cAAc,GAAGpB,OAAO,CAACa,GAAR,CAAYR,MAAM,IAAI;AACzC,UAAIA,MAAM,CAACU,EAAP,KAAcA,EAAlB,EAAsB;AACpBV,QAAAA,MAAM,CAACgB,UAAP,GAAoB,CAAChB,MAAM,CAACgB,UAA5B;AACD;;AACD,aAAOhB,MAAP;AACD,KALoB,CAArB;AAMAJ,IAAAA,UAAU,CAACmB,cAAD,CAAV;AACD,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEhB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;GAjDQL,U;;KAAAA,U;AAmDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport AddRecipe from './AddRecipe';\nimport Recipe from './Recipe';\n\nfunction RecipeList() {\n  const [recipes, setRecipes] = useState([]);\n  console.log('hetererterte')\n  const addRecipe = recipe => {\n    if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n      return;\n    }\n\n    const newRecipes = [recipe, ...recipes];\n\n    setRecipes(newRecipes);\n    console.log(...recipes);\n  };\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => (item.id === recipeId ? newValue : item)));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n\n    setRecipes(removedArr);\n  };\n\n  const completeRecipe = id => {\n    let updatedRecipes = recipes.map(recipe => {\n      if (recipe.id === id) {\n        recipe.isComplete = !recipe.isComplete;\n      }\n      return recipe;\n    });\n    setRecipes(updatedRecipes);\n  };\n\n  return (\n    <>\n      <AddRecipe onSubmit={addRecipe} />\n      {/* <Recipe\n        recipes={recipes}\n        completeRecipe={completeRecipe}\n        removeRecipe={removeRecipe}\n        updateRecipe={updateRecipe}\n      /> */}\n    </>\n  );\n}\n\nexport default RecipeList;\n\n"]},"metadata":{},"sourceType":"module"}