{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/components/AddRecipeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport './AddRecipeModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipeModal = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function AddRecipeModal(props, addRef) {\n  _s();\n\n  const [amount, setAmount] = useState();\n  const [ingrName, setIngrName] = useState('');\n  const [unit, setUnit] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n\n  const onModalCancel = e => {\n    addRef.current.style.display = 'none';\n  };\n\n  const handleChangeInput = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleChangeName = e => {\n    setIngrName(e.target.value);\n  };\n\n  const handleUnitChange = e => {\n    setUnit(e.target.value);\n  };\n\n  const handleNewIngredient = e => {\n    e.preventDefault();\n    setAmount();\n    setUnit(undefined);\n    setIngrName('');\n    const newIngredient = {\n      'amount': amount,\n      'unit': unit,\n      'ingredient': ingrName\n    };\n    setIngredients([...ingredients, newIngredient]);\n    setIngrName('');\n    setAmount('');\n    setUnit('');\n  };\n\n  const allIngredients = () => {\n    return ingredients.map(ingredient => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ingredient-text\",\n        children: [ingredient.amount, \" \", ingredient.unit, \" \", ingredient.ingredient, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newRecipe\",\n    ref: addRef,\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onModalCancel,\n        className: \"close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNewIngredient,\n        id: \"ingredient-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-holder\",\n              onChange: handleChangeInput,\n              type: \"text\",\n              step: \"any\",\n              value: amount,\n              required: true,\n              placeholder: \"Enter amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit\",\n              children: \"Unit:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-holder\",\n              onChange: handleUnitChange,\n              type: \"text\",\n              step: \"any\",\n              value: unit,\n              required: true,\n              placeholder: \"Enter unit for ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingredient\",\n              className: \"label-holder\",\n              children: \"Ingredient:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-holder\",\n              onChange: handleChangeName,\n              type: \"text\",\n              value: ingrName,\n              required: true,\n              placeholder: \"Enter name for ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {},\n          className: \"save-button\",\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), allIngredients()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}, \"OygE71ZmxE+CaBS0XXsdQegIC7g=\")), \"OygE71ZmxE+CaBS0XXsdQegIC7g=\");\n\n_c2 = AddRecipeModal;\nexport default AddRecipeModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddRecipeModal$React.forwardRef\");\n$RefreshReg$(_c2, \"AddRecipeModal\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/components/AddRecipeModal.js"],"names":["React","useState","useEffect","useRef","createRef","AddRecipeModal","forwardRef","props","addRef","amount","setAmount","ingrName","setIngrName","unit","setUnit","ingredients","setIngredients","onModalCancel","e","current","style","display","handleChangeInput","target","value","handleChangeName","handleUnitChange","handleNewIngredient","preventDefault","undefined","newIngredient","allIngredients","map","ingredient"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAO,uBAAP;;;AACA,MAAMC,cAAc,iCAAGL,KAAK,CAACM,UAAN,SAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,MAA/B,EAAuC;AAAA;;AAE3E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMgB,aAAa,GAAGC,CAAC,IAAI;AACvBV,IAAAA,MAAM,CAACW,OAAP,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAGJ,CAAC,IAAI;AAC3BR,IAAAA,SAAS,CAACQ,CAAC,CAACK,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAGP,CAAC,IAAI;AAC1BN,IAAAA,WAAW,CAACM,CAAC,CAACK,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAME,gBAAgB,GAAGR,CAAC,IAAI;AAC1BJ,IAAAA,OAAO,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMG,mBAAmB,GAAIT,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACU,cAAF;AACAlB,IAAAA,SAAS;AACTI,IAAAA,OAAO,CAACe,SAAD,CAAP;AACAjB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACA,UAAMkB,aAAa,GACf;AAAC,gBAAWrB,MAAZ;AACC,cAASI,IADV;AAEC,oBAAcF;AAFf,KADJ;AAKAK,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBe,aAAjB,CAAD,CAAd;AACAlB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAdD;;AAgBA,QAAOiB,cAAc,GAAG,MAAI;AACxB,WAAOhB,WAAW,CAACiB,GAAZ,CAAgBC,UAAU,IAAG;AAChC,0BACI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,mBAAgCA,UAAU,CAACxB,MAA3C,OAAoDwB,UAAU,CAACpB,IAA/D,OAAsEoB,UAAU,CAACA,UAAjF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,CAAP;AAKH,GAND;;AAOA,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,GAAG,EAAEzB,MAAzB;AAAiC,IAAA,SAAS,EAAC,OAA3C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACA;AAAM,QAAA,OAAO,EAAES,aAAf;AAA8B,QAAA,SAAS,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAM,QAAA,QAAQ,EAAEU,mBAAhB;AAAqC,QAAA,EAAE,EAAC,iBAAxC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,QAAQ,EAAEL,iBAA1C;AAA6D,cAAA,IAAI,EAAC,MAAlE;AAAyE,cAAA,IAAI,EAAC,KAA9E;AAAoF,cAAA,KAAK,EAAEb,MAA3F;AAAmG,cAAA,QAAQ,MAA3G;AAA4G,cAAA,WAAW,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,QAAQ,EAAEiB,gBAA1C;AAA4D,cAAA,IAAI,EAAC,MAAjE;AAAwE,cAAA,IAAI,EAAC,KAA7E;AAAmF,cAAA,KAAK,EAAEb,IAA1F;AAAgG,cAAA,QAAQ,MAAxG;AAAyG,cAAA,WAAW,EAAC;AAArH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,YAAf;AAA4B,cAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,QAAQ,EAAEY,gBAA1C;AAA4D,cAAA,IAAI,EAAC,MAAjE;AAAwE,cAAA,KAAK,EAAEd,QAA/E;AAAyF,cAAA,QAAQ,MAAjG;AAAkG,cAAA,WAAW,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI;AAAQ,UAAA,OAAO,EAAE,MAAM,CAAE,CAAzB;AAA2B,UAAA,SAAS,EAAC,aAArC;AAAmD,UAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,EAkBKoB,cAAc,EAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAxEsB,kCAAH,iCAApB;;MAAM1B,c;AA0EN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from 'react';\nimport './AddRecipeModal.scss'\nconst AddRecipeModal = React.forwardRef(function AddRecipeModal(props, addRef) {\n\n    const [amount, setAmount] = useState()\n    const [ingrName, setIngrName] = useState('')\n    const [unit, setUnit] = useState('')\n    const [ingredients, setIngredients] = useState([])\n    const onModalCancel = e => {\n        addRef.current.style.display = 'none';\n    }\n\n    const handleChangeInput = e => {\n        setAmount(e.target.value)\n    }\n    const handleChangeName = e => {\n        setIngrName(e.target.value)\n    }\n\n    const handleUnitChange = e => {\n        setUnit(e.target.value)\n    }\n\n    const handleNewIngredient = (e) => {\n        e.preventDefault();\n        setAmount();\n        setUnit(undefined);\n        setIngrName('');\n        const newIngredient =\n            {'amount' : amount,\n             'unit' : unit,\n             'ingredient': ingrName\n            };\n        setIngredients([...ingredients, newIngredient])\n        setIngrName('')\n        setAmount('')\n        setUnit('');\n    };\n\n    const  allIngredients = ()=>{\n        return ingredients.map(ingredient =>{\n            return(\n                <p className='ingredient-text'>{ingredient.amount} {ingredient.unit} {ingredient.ingredient} </p> \n            )\n        })\n    };\n    return (\n        <div id='newRecipe' ref={addRef} className='modal'>\n            <div className='modal-content'>\n            <span onClick={onModalCancel} className='close'>&times;</span>\n            <h4>Add New Recipe</h4>\n            <form onSubmit={handleNewIngredient} id='ingredient-form' >\n                <div className='container'>\n                    <div className='block'>\n                        <label htmlFor='amount'>Amount:</label>\n                        <input className='input-holder' onChange={handleChangeInput} type='text' step='any' value={amount} required placeholder='Enter amount'/>\n                    </div>\n                    <div className='block'>\n                        <label htmlFor='unit'>Unit:</label>\n                        <input className='input-holder' onChange={handleUnitChange} type='text' step='any' value={unit} required placeholder='Enter unit for ingredient'/>\n                    </div>\n                    <div className='block'>\n                        <label htmlFor='ingredient' className='label-holder'>Ingredient:</label>\n                        <input className='input-holder' onChange={handleChangeName} type='text' value={ingrName} required placeholder='Enter name for ingredient'/>\n                    </div>\n                </div>\n                <button onClick={() => {}} className='save-button' type='submit'>\n                    Add\n                </button>\n                {allIngredients()}\n            </form>\n            </div>\n        </div>\n    )\n});\n\nexport default AddRecipeModal;"]},"metadata":{},"sourceType":"module"}