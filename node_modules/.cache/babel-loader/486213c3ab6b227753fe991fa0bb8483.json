{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/components/AddRecipeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './AddRecipeModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipeModal = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function AddRecipeModal(props, addRef) {\n  _s();\n\n  const [amount, setAmount] = useState('');\n  const [ingrName, setIngrName] = useState('');\n  const [recName, setRecName] = useState(''); // const [unit, setUnit] = useState('')\n\n  const [ingredients, setIngredients] = useState([]);\n\n  const onModalCancel = e => {\n    addRef.current.style.display = 'none';\n  };\n\n  const handleChangeName = e => {\n    const targetVal = e.target.value;\n    const ingArr = targetVal.split(',');\n    setIngrName(e.target.value);\n    setIngredients([...ingArr]);\n  };\n\n  const handleChange = e => {\n    setRecName(e.target.value);\n  }; // const handleNewIngredient = (e) => {\n  //     e.preventDefault();\n  //     setAmount();\n  //     setIngrName('');\n  //     const newIngredient =\n  //         {'amount' : amount,\n  //          'ingredient': ingrName\n  //         };\n  //     setIngredients([...ingredients, newIngredient])\n  //     setIngrName('')\n  //     setAmount('')\n  // };\n\n\n  const addIngredientsToStore = async () => {\n    const response = await fetch('/recipes', {\n      name: recName,\n      ingredients: ingrName,\n      id: 1\n    }, function (data) {\n      if (data === 'yes') {\n        alert(\"login success\");\n      }\n    });\n    console.log(response, 'responseresponse'); // setIngrName('')\n    // setRecName('')\n  };\n\n  const showIngredients = () => {\n    return ingredients.map(ingredient => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [ingredient.amount, \" \", ingredient.ingredient]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newRecipe\",\n    ref: addRef,\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onModalCancel,\n        className: \"close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNewIngredient,\n        id: \"ingredient-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"text\",\n              step: \"any\",\n              value: recName,\n              required: true,\n              placeholder: \"Enter name of recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingredient\",\n              children: \"Ingredient:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"4\",\n              cols: \"50\",\n              onChange: handleChangeName,\n              type: \"text\",\n              value: ingrName,\n              required: true,\n              placeholder: \"Enter ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: addIngredientsToStore,\n          className: \"save-button\",\n          children: \"Add1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), showIngredients()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}, \"XgM1H4IODerfm26RLNcLZ+JcoSQ=\")), \"XgM1H4IODerfm26RLNcLZ+JcoSQ=\");\n\n_c2 = AddRecipeModal;\nexport default AddRecipeModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddRecipeModal$React.forwardRef\");\n$RefreshReg$(_c2, \"AddRecipeModal\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/components/AddRecipeModal.js"],"names":["React","useEffect","useState","AddRecipeModal","forwardRef","props","addRef","amount","setAmount","ingrName","setIngrName","recName","setRecName","ingredients","setIngredients","onModalCancel","e","current","style","display","handleChangeName","targetVal","target","value","ingArr","split","handleChange","addIngredientsToStore","response","fetch","name","id","data","alert","console","log","showIngredients","map","ingredient","handleNewIngredient"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AddRecipeModal.scss'\nconst AddRecipeModal = React.forwardRef(function AddRecipeModal(props, addRef) {\n\n    const [amount, setAmount] = useState('')\n    const [ingrName, setIngrName] = useState('')\n    const [recName, setRecName] = useState('')\n    // const [unit, setUnit] = useState('')\n    const [ingredients, setIngredients] = useState([])\n    const onModalCancel = e => {\n        addRef.current.style.display = 'none';\n    }\n\n    const handleChangeName = e => {\n        const targetVal = e.target.value\n        const ingArr = targetVal.split(',')\n        setIngrName(e.target.value)\n        setIngredients([...ingArr])\n    }\n\n    const handleChange = e => {\n        setRecName(e.target.value)\n    }\n\n    // const handleNewIngredient = (e) => {\n    //     e.preventDefault();\n    //     setAmount();\n    //     setIngrName('');\n    //     const newIngredient =\n    //         {'amount' : amount,\n    //          'ingredient': ingrName\n    //         };\n    //     setIngredients([...ingredients, newIngredient])\n    //     setIngrName('')\n    //     setAmount('')\n    // };\n\n    const addIngredientsToStore = async () => {\n        const response = await fetch('/recipes', {name: recName, ingredients: ingrName, id: 1},function(data){\n            if(data === 'yes') {\n                alert(\"login success\");\n              }\n          });\n          console.log(response, 'responseresponse')\n        // setIngrName('')\n        // setRecName('')\n    }\n\n    const  showIngredients = ()=>{\n        return ingredients.map(ingredient =>{\n            return(\n                <p >{ingredient.amount} {ingredient.ingredient}</p> \n            )\n        })\n    };\n    return (\n        <div id='newRecipe' ref={addRef} className='modal'>\n            <div className='modal-content'>\n            <span onClick={onModalCancel} className='close'>&times;</span>\n            <form onSubmit={handleNewIngredient} id='ingredient-form' >\n                <div className='formContainer'>\n                    <div className='content'>\n                        <label htmlFor='name'>Name:</label>\n                        <input onChange={handleChange} type='text' step='any' value={recName} required placeholder='Enter name of recipe'/>\n                    </div>\n                    <div className='content'>\n                        <label htmlFor='ingredient'>Ingredient:</label>\n                        <textarea rows=\"4\" cols=\"50\" onChange={handleChangeName} type='text' value={ingrName} required placeholder='Enter ingredients'/>\n                    </div>\n                </div>\n                <button onSubmit={addIngredientsToStore} className='save-button'>\n                    Add1\n                </button>\n                {showIngredients()}\n            </form>\n            </div>\n        </div>\n    )\n});\n\nexport default AddRecipeModal;"]},"metadata":{},"sourceType":"module"}