{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/AddRecipeModal/AddRecipeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './AddRecipeModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipeModal = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function AddRecipeModal(props, recipeRef) {\n  _s();\n\n  const {\n    data,\n    open,\n    dataToUpdate,\n    isEdit,\n    setIsEdit\n  } = props;\n  const [recName, setRecName] = useState('');\n  const [recTitle, setRecTitle] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  useEffect(() => {\n    if (isEdit) {\n      setRecTitle(dataToUpdate.title);\n      setRecName(dataToUpdate.name);\n      setIngredients(dataToUpdate.ingredients);\n    }\n  }, [isEdit, dataToUpdate]);\n\n  const onModalCancel = e => {\n    recipeRef.current.style.display = 'none';\n    setRecTitle('');\n    setIngredients('');\n  };\n\n  const handleChangeName = e => {\n    const targetVal = e.target.value;\n    setIngredients(targetVal);\n  };\n\n  const handleChange = e => {\n    setRecName(e.target.value);\n  };\n\n  const handleChangeTitle = e => {\n    setRecTitle(e.target.value);\n  };\n\n  const addIngredientsToStore = async () => {\n    if (isEdit) {\n      fetch(`/updateRecipe`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: recTitle,\n          ingredients: ingredients,\n          name: recName\n        })\n      }).then(res => res.json()).then(res => console.log(res));\n    } else {\n      fetch('/saverecipes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: recTitle,\n          name: recName,\n          ingredients: ingredients,\n          username: 'Siddhi'\n        })\n      }).then(res => res.json()).then(res => console.log(res));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newRecipe\",\n    ref: recipeRef,\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onModalCancel,\n        className: \"close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"ingredient-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChangeTitle,\n              type: \"text\",\n              step: \"any\",\n              value: recTitle,\n              required: true,\n              placeholder: \"Enter title of recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"text\",\n              step: \"any\",\n              value: recName,\n              required: true,\n              placeholder: \"Enter name of recipe\",\n              disabled: isEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingredient\",\n              children: \"Ingredient:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"4\",\n              cols: \"50\",\n              onChange: handleChangeName,\n              type: \"text\",\n              value: ingredients,\n              required: true,\n              placeholder: \"Enter ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingredient\",\n              children: \"Tags:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addIngredientsToStore,\n            className: \"save-button\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}, \"YvT3LVMNPgi2V0JLtydXFN1OLLg=\")), \"YvT3LVMNPgi2V0JLtydXFN1OLLg=\");\n\n_c2 = AddRecipeModal;\nexport default AddRecipeModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddRecipeModal$React.forwardRef\");\n$RefreshReg$(_c2, \"AddRecipeModal\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/AddRecipeModal/AddRecipeModal.js"],"names":["React","useEffect","useState","AddRecipeModal","forwardRef","props","recipeRef","data","open","dataToUpdate","isEdit","setIsEdit","recName","setRecName","recTitle","setRecTitle","ingredients","setIngredients","title","name","onModalCancel","e","current","style","display","handleChangeName","targetVal","target","value","handleChange","handleChangeTitle","addIngredientsToStore","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","username"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AddRecipeModal.scss'\n\nconst AddRecipeModal = React.forwardRef(function AddRecipeModal(props, recipeRef) {\n\n    const {data, open, dataToUpdate, isEdit, setIsEdit} = props\n    const [recName, setRecName] = useState('')\n    const [recTitle, setRecTitle] = useState('')\n    const [ingredients, setIngredients] = useState('')\n\n    useEffect(() => {\n        if(isEdit) {\n            setRecTitle(dataToUpdate.title)\n            setRecName(dataToUpdate.name)\n            setIngredients(dataToUpdate.ingredients)\n        }\n    }, [isEdit, dataToUpdate])\n\n    const onModalCancel = e => {\n        recipeRef.current.style.display = 'none';\n        setRecTitle('')\n        setIngredients('')\n    }\n    const handleChangeName = e => {\n        const targetVal = e.target.value\n        setIngredients(targetVal)\n    }\n\n    const handleChange = e => {\n        setRecName(e.target.value)\n    }\n\n    const handleChangeTitle = e => {\n        setRecTitle(e.target.value)\n    }\n    const addIngredientsToStore = async () => {\n        if(isEdit) {\n            fetch(`/updateRecipe`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                        title: recTitle, ingredients: ingredients, name: recName\n                    })\n                }).then(res => res.json())\n                .then(res => console.log(res))\n        } else {\n            fetch('/saverecipes', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({title: recTitle, name: recName, ingredients: ingredients, username: 'Siddhi'})\n                }).then(res => res.json())\n                .then(res => console.log(res));\n        }\n    }\n    return (\n        <div id='newRecipe' ref={recipeRef} className='modal'>\n            <div className='modal-content'>\n            <span onClick={onModalCancel} className='close'>&times;</span>\n            <form id='ingredient-form' >\n                <div className='formContainer'>\n                    <div className='content'>\n                        <label htmlFor='name'>Name:</label>\n                        <input onChange={handleChangeTitle} type='text' step='any' value={recTitle} required placeholder='Enter title of recipe' />\n                    </div>\n                    <div className='content'>\n                        <label htmlFor='name'>Name:</label>\n                        <input onChange={handleChange} type='text' step='any' value={recName} required placeholder='Enter name of recipe' disabled={isEdit}/>\n                    </div>\n                    <div className='content'>\n                        <label htmlFor='ingredient'>Ingredient:</label>\n                        <textarea rows=\"4\" cols=\"50\" onChange={handleChangeName} type='text' value={ingredients} required placeholder='Enter ingredients'/>\n                    </div>\n                    <div className='content'>\n                        <label htmlFor='ingredient'>Tags:</label>\n                        {/* <textarea rows=\"4\" cols=\"50\" onChange={() => {}} type='text'  required placeholder='Enter Tags'/> */}\n                    </div>\n                    <button onClick={addIngredientsToStore} className='save-button'>\n                        Add\n                    </button>\n                </div>\n            </form>\n            </div>\n        </div>\n    )\n});\n\nexport default AddRecipeModal;"]},"metadata":{},"sourceType":"module"}