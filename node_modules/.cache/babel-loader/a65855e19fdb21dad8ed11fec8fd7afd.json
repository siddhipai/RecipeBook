{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const {\n    isLoggedIn\n  } = props;\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [data, setdata] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n\n  const handleChangePass = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleChangeUserName = e => {\n    setUsername(e.target.value);\n  };\n\n  const onLogin = () => {\n    // if (user.loggedIn) return;\n    // setUser({ loggedIn: true });\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.uuid) {\n        var _location$state;\n\n        window.localStorage.setItem('session', res.uuid);\n        setUser({\n          loggedIn: true\n        }); // console.log(location, 'location')\n\n        if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.from) {\n          navigate(location.state.from);\n        } // console.log('doneeeeee')\n\n      }\n    });\n  };\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChangeUserName,\n        value: username,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: handleChangePass,\n        value: password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogin,\n      className: \"save-button\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n\n  return renderForm;\n}\n\n_s(Login, \"j6TLRR9FCbAGWv8OwIrK8r+MHks=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/Login/Login.js"],"names":["useEffect","useState","axios","useLocation","useNavigate","useContext","UserContext","Login","props","isLoggedIn","password","setPassword","username","setUsername","data","setdata","navigate","location","user","setUser","handleChangePass","e","target","value","handleChangeUserName","onLogin","fetch","method","headers","body","JSON","stringify","then","res","json","uuid","window","localStorage","setItem","loggedIn","state","from","renderForm"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../../App\";\n\nfunction Login(props) {\n    const {isLoggedIn} = props\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [data, setdata] = useState('')\n    const navigate = useNavigate()\n    const location = useLocation()\n    const { user, setUser } = useContext(UserContext);\n\n    const handleChangePass = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleChangeUserName = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const onLogin = () => {\n      // if (user.loggedIn) return;\n      // setUser({ loggedIn: true });\n\n      fetch('/users', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({username, password})\n        }).then(res => res.json())\n        .then(res =>  {\n          if(res.uuid) {\n            window.localStorage.setItem('session', res.uuid)\n            setUser({ loggedIn: true });\n            // console.log(location, 'location')\n            if (location.state?.from) {\n              navigate(location.state.from);\n            }\n            // console.log('doneeeeee')\n          }\n        });\n\n    }\n    const renderForm = (\n        <div className=\"form\">\n          {/* <form> */}\n            <div className=\"input-container\">\n              <label>Username </label>\n              <input type=\"text\" onChange={handleChangeUserName} value={username} required />\n              {/* {renderErrorMessage(\"uname\")} */}\n            </div>\n            <div className=\"input-container\">\n              <label>Password </label>\n              <input type=\"password\" onChange={handleChangePass} value={password} required />\n              {/* {renderErrorMessage(\"pass\")} */}\n            </div>\n            <button onClick={onLogin} className='save-button'>\n                Login\n            </button>\n          {/* </form> */}\n        </div>\n     );\n\n     return renderForm\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}