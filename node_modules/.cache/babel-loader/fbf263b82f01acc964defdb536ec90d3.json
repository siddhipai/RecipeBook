{"ast":null,"code":"var _jsxFileName = \"/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport '../style.scss';\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport Fuse from \"fuse.js\";\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddRecipe(props) {\n  _s();\n\n  const [isEdit, setIsEdit] = useState(false);\n  const [data, setData] = useState([]);\n  const [searchQuery, setQuery] = useState('');\n  const [initialData, setInitialData] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState({});\n  const recipeRef = useRef(null);\n  const confirmationRef = useRef(null);\n  useEffect(() => {\n    fetch('/recipes').then(response => response.json()).then(data => {\n      setData(data.recipes);\n      setInitialData(data.recipes);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const query = e.target.value;\n    setQuery(query);\n    const fuse = new Fuse(data, {\n      keys: ['name', 'ingredients']\n    });\n    const result = fuse.search(query).map(res => res.item);\n    setData(result);\n\n    if (query === '') {\n      setData(initialData);\n    }\n  };\n\n  const search = e => {\n    e.preventDefault();\n  };\n\n  const removeRecipe = (e, name) => {\n    e.preventDefault();\n    confirmationRef.current.style.display = \"block\";\n  };\n\n  const editRecipe = (e, name) => {\n    e.preventDefault();\n    setIsEdit(true);\n\n    for (let data of initialData) {\n      if (data.name === name) {\n        setDataToUpdate(data); // break\n      }\n    }\n\n    recipeRef.current.style.display = \"block\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        className: \"search\",\n        type: \"text\",\n        placeholder: \"Search..\",\n        name: \"search\",\n        id: \"query\",\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      data: data,\n      removeRecipe: removeRecipe,\n      editRecipe: editRecipe\n    }, entry.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddRecipe, \"J0mwKhmo9qI09pPLQu7KEfKrogo=\");\n\n_c = AddRecipe;\nexport default AddRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/siddhi/higharc/ReceipeBook/recipes/src/client/components/Home/Home.js"],"names":["React","useState","useEffect","useRef","createRef","Fuse","Card","AddRecipe","props","isEdit","setIsEdit","data","setData","searchQuery","setQuery","initialData","setInitialData","dataToUpdate","setDataToUpdate","recipeRef","confirmationRef","fetch","then","response","json","recipes","handleChange","e","query","target","value","fuse","keys","result","search","map","res","item","preventDefault","removeRecipe","name","current","style","display","editRecipe","entry"],"mappings":"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","sourcesContent":["import '../style.scss'\n\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport Fuse from \"fuse.js\";\nimport Card from '../Card/Card'\n\nfunction AddRecipe(props) {\n  const [isEdit, setIsEdit] = useState(false)\n  const [data, setData] = useState([])\n  const [searchQuery, setQuery] = useState('')\n  const [initialData, setInitialData] = useState([])\n  const [dataToUpdate, setDataToUpdate] = useState({})\n  const recipeRef = useRef(null);\n  const confirmationRef = useRef(null);\n\n  useEffect(() => {\n    fetch('/recipes')\n      .then(response => response.json())\n      .then(data => {\n        setData(data.recipes)\n        setInitialData(data.recipes)\n      });\n  }, []);\n\n  const handleChange = e => {\n    const query = e.target.value\n    setQuery(query)\n    const fuse = new Fuse(data, {keys: [\n      'name',\n      'ingredients'\n    ]});\n    const result = fuse.search(query).map((res) => res.item);\n    setData(result)\n    if(query === '') {\n      setData(initialData)\n    }\n  };\n\n  const search = (e)=> {\n    e.preventDefault();\n  }\n\n  const removeRecipe = (e, name) => {\n    e.preventDefault();\n    confirmationRef.current.style.display = \"block\";\n  };\n\n  const editRecipe = (e, name) => {\n    e.preventDefault();\n    setIsEdit(true)\n    for(let data of initialData) {\n      if(data.name === name) {\n        setDataToUpdate(data)\n        // break\n      }\n    }\n    recipeRef.current.style.display = \"block\";\n  };\n\n  return (\n    <>\n      <form>\n        <input onChange={handleChange} className='search' type=\"text\" placeholder=\"Search..\" name=\"search\" id=\"query\" value={searchQuery}/>\n      </form>\n      <Card key={entry.name} data={data} removeRecipe={removeRecipe} editRecipe={editRecipe}/>\n        {/* <ConfirmationModal ref={confirmationRef} key={entry.name} />\n        <AddRecipeModal ref={recipeRef} isEdit={isEdit} dataToUpdate={dataToUpdate}/> */}\n    </>)\n}\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}