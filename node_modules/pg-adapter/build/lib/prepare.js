"use strict";
exports.__esModule = true;
exports.prepare = void 0;
var types_1 = require("../types");
var quote_1 = require("./quote");
var prepare = function (adapter, name, args, query) {
    var arr = ['PREPARE "', name, '"'];
    if (args.length)
        arr.push("(" + args.join(', ') + ")");
    arr.push(' AS ', query);
    var prepared = Object.create(adapter);
    prepared.sql = arr.join('');
    prepared.name = name;
    prepared.performQuery = function (mode, args, getFieldsInfo) {
        var sql = "EXECUTE \"" + name + "\"";
        if (args === null || args === void 0 ? void 0 : args.length)
            sql += "(" + args.map(quote_1.quote).join(', ') + ")";
        return adapter.performQuery(mode, sql, undefined, prepared);
    };
    prepared.objects = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.objects, args);
    };
    prepared.objectsWithFields = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.objects, args, true);
    };
    prepared.arrays = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.arrays, args);
    };
    prepared.arraysWithFields = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.arrays, args, true);
    };
    prepared.value = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.value, args);
    };
    prepared.valueWithFields = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.value, args, true);
    };
    prepared.exec = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return prepared.performQuery(types_1.ResultMode.skip, args);
    };
    prepared.query = prepared.objects;
    prepared.queryWithFields = prepared.objectsWithFields;
    return new Proxy(adapter, {
        get: function (target, name) {
            return prepared[name] || adapter[name];
        }
    });
};
exports.prepare = prepare;
